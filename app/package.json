// package.json
{
  "name": "@krud-dev/boost", // 项目名称
  "version": "0.9.0", // 版本
  "description": "A visual tool to monitor and interact with Spring Boot applications via Actuator", // 描述
  "private": "true", // 表明项目为私有库，npm不会发布它
  "keywords": [ // 关键词
    "spring boot",
    "admin",
    "actuator",
    "monitoring",
    "performance",
    "metrics",
    "ostara"
  ],
  "homepage": "https://github.com/krud-dev/ostara#readme", // 项目主页
  "bugs": { // 缺陷主页
    "url": "https://github.com/krud-dev/ostara/issues"
  },
  "repository": { // 仓库主页
    "type": "git",
    "url": "git+https://github.com/krud-dev/ostara.git"
  },
  "license": "Apache-2.0", // 许可证
  "author": { // 作者
    "name": "Krud Dev",
    "email": "admin@krud.dev",
    "url": "https://krud.dev/"
  },
  "contributors": [ // 共享者
    {
      "name": "Shani Holdengreber",
      "url": "https://github.com/thewizkid87"
    },
    {
      "name": "Aviv Mor",
      "url": "https://github.com/avivm"
    },
    {
      "name": "Idan Elhalwani",
      "email": "idan@elhalwani.com",
      "url": "https://github.com/idane"
    }
  ],
  "main": "./src/main/main.ts", // 项目的入口文件
  "scripts": { // 脚本，可通过 npm run <script_name> 来运行指定脚本
    "jdk:download": "../devops/jdkutil.py clean:jdks download unzip", // 下载jdk
    "build": "concurrently \"npm run build:main\" \"npm run build:renderer\" \"npm run build:daemon\" \"npm run build:demo\"", // 构建
    "build:main": "cross-env NODE_ENV=production TS_NODE_TRANSPILE_ONLY=true webpack --config ./.erb/configs/webpack.config.main.prod.ts", // 构建 main
    "build:renderer": "cross-env NODE_ENV=production TS_NODE_TRANSPILE_ONLY=true webpack --config ./.erb/configs/webpack.config.renderer.prod.ts", // 构建 视图渲染
    "build:daemon": "cd ../daemon && ./gradlew bootJar -Pprod", // 构建 daemon
    "build:demo": "cd ../demo && ./gradlew bootJar", // 构建 demo
    "postinstall": "ts-node .erb/scripts/check-native-dep.js && electron-builder install-app-deps && cross-env NODE_ENV=development TS_NODE_TRANSPILE_ONLY=true webpack --config ./.erb/configs/webpack.config.renderer.dev.dll.ts", // 预安装
    "lint": "cross-env NODE_ENV=development eslint . --ext .js,.jsx,.ts,.tsx",
    "package:dev": "npm run build && electron-builder build --publish never -c.mac.identity=null", // 打包 dev
    "package": "npm run jdk:download && ts-node ./.erb/scripts/clean.js dist && npm run build && electron-builder build --publish never", // 打包
    "package:all": "npm run jdk:download && ts-node ./.erb/scripts/clean.js dist && npm run build && electron-builder build --publish never -mwl --arm64 --x64", // 打包所有
    "prepare": "cd .. && husky install ./app/.husky",
    "rebuild": "electron-rebuild --parallel --types prod,dev,optional --module-dir release/app", // 重新构建
    "start": "concurrently \"npm run start:daemon\"  \"ts-node ./.erb/scripts/check-port-in-use.js && npm run start:renderer\"", // 启动
    "start:thin": "ts-node ./.erb/scripts/check-port-in-use.js && npm run start:renderer", // 瘦包启动
    "start:main": "cross-env NODE_ENV=development electronmon -r ts-node/register/transpile-only .", // main启动
    "start:preload": "cross-env NODE_ENV=development TS_NODE_TRANSPILE_ONLY=true webpack --config ./.erb/configs/webpack.config.preload.dev.ts", // 预加载启动
    "start:renderer": "cross-env NODE_ENV=development TS_NODE_TRANSPILE_ONLY=true webpack serve --config ./.erb/configs/webpack.config.renderer.dev.ts", // 视图渲染启动
    "start:daemon": "cd ../daemon && ./gradlew bootRun", // daemon 启动
    "start:demo": "cd ../demo && ./gradlew bootRun", // demo 启动
    "test": "jest", // 测试
    "changeset": "changeset", // 变更发布命令
    "release": "changeset version && changeset tag" // 发布命令
  },
  "lint-staged": { // 屏蔽不需要使用git管理的工具
    "*.{js,jsx,ts,tsx}": [
      "cross-env NODE_ENV=development eslint --cache"
    ],
    "*.json,.{eslintrc,prettierrc}": [
      "prettier --ignore-path .eslintignore --parser json --write"
    ],
    "*.{css,scss}": [
      "prettier --ignore-path .eslintignore --single-quote --write"
    ],
    "*.{html,md,yml}": [
      "prettier --ignore-path .eslintignore --single-quote --write"
    ]
  },
  "browserslist": [], // 根据设置的目标浏览器环境，来智能添加CSS前缀
  "prettier": { // 代码格式化配置
    "singleQuote": true,
    "printWidth": 120,
    "overrides": [
      {
        "files": [
          ".prettierrc",
          ".eslintrc"
        ],
        "options": {
          "parser": "json"
        }
      }
    ]
  },
  "jest": {
    "moduleDirectories": [
      "node_modules",
      "release/app/node_modules",
      "src"
    ],
    "moduleFileExtensions": [
      "js",
      "jsx",
      "ts",
      "tsx",
      "json"
    ],
    "moduleNameMapper": {
      "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/.erb/mocks/fileMock.js",
      "\\.(css|less|sass|scss)$": "identity-obj-proxy"
    },
    "setupFiles": [
      "./.erb/scripts/check-build-exists.ts"
    ],
    "testEnvironment": "jsdom",
    "testEnvironmentOptions": {
      "url": "http://localhost/"
    },
    "testPathIgnorePatterns": [
      "release/app/dist"
    ],
    "transform": {
      "\\.(ts|tsx|js|jsx)$": "ts-jest"
    }
  },
  "dependencies": {
    "@amplitude/analytics-browser": "^1.9.4",
    "@changesets/changelog-github": "^0.4.8",
    "@changesets/cli": "^2.26.0",
    "@codemirror/language": "^6.4.0",
    "@ebay/nice-modal-react": "1.2.8",
    "@emotion/react": "^11.10.5",
    "@emotion/styled": "^11.10.5",
    "@mui/icons-material": "^5.11.16",
    "@mui/lab": "^5.0.0-alpha.131",
    "@mui/material": "^5.13.2",
    "@mui/system": "^5.13.2",
    "@mui/utils": "^5.13.1",
    "@mui/x-date-pickers": "^6.5.0",
    "@sentry/electron": "^4.5.0",
    "@stomp/stompjs": "^7.0.0",
    "@tanstack/react-query": "^4.20.9",
    "@uiw/codemirror-extensions-langs": "^4.19.7",
    "@uiw/react-codemirror": "^4.19.7",
    "allotment": "^1.18.1",
    "apexcharts": "^3.36.3",
    "axios": "^1.2.1",
    "change-case": "^4.1.2",
    "copy-to-clipboard": "^3.3.3",
    "cronstrue": "^2.21.0",
    "date-fns": "^2.29.3",
    "electron-context-menu": "^3.6.1", // Electron 应用的上下文菜单
    "electron-debug": "^3.2.0", // 向 Electron 程序添加调试功能，包含：DevTools、Reload、Element Inspector、Activates DevTools extensions
    "electron-dl": "^3.5.0",
    "electron-log": "^4.4.8",
    "electron-store": "^8.1.0", // Electron 简单数据持久化，保存和加载用户设置、应用程序状态、缓存灯
    "electron-updater": "^5.2.3",
    "elkjs": "^0.8.2",
    "flat": "^5.0.2",
    "framer-motion": "^10.3.1",
    "js-yaml": "^4.1.0",
    "lodash": "^4.17.21",
    "material-ui-popup-state": "^5.0.4",
    "node-cache": "^5.1.2",
    "node-schedule": "^2.1.0", // 基于时间的作业调度程序
    "notistack": "^2.0.8",
    "raw-loader": "^4.0.2",
    "react": "^18.2.0",
    "react-apexcharts": "^1.4.0",
    "react-arborist": "^3.0.2",
    "react-dom": "^18.2.0",
    "react-error-boundary": "^4.0.4",
    "react-hook-form": "^7.40.0",
    "react-intl": "^6.2.5",
    "react-markdown": "^8.0.7",
    "react-perfect-scrollbar": "^1.5.8",
    "react-router-dom": "^6.4.5", // 
    "react-scroll": "^1.8.9", // 用于动画垂直滚动的 React 组件
    "react-use": "^17.4.0", // React Hooks 集合
    "react-virtualized-auto-sizer": "^1.0.7", // 虚拟化自动调整器
    "reactflow": "^11.5.6", // 用于构建交互式图形和基于节点的编辑器
    "reflect-metadata": "^0.1.13", // 元数据反射API
    "rehype-raw": "^6.1.1", // 解析树和原始节点，保持位置信息正常
    "remark-gfm": "^3.0.1", // 支持 GFM 的备注插件
    "semver": "^7.5.1", // 服务器
    "stylis-plugin-rtl": "^2.1.1", // CSS 的 Stylis RTL 插件
    "typeorm": "^0.3.11", // ORM 工具
    "uuid": "^9.0.0" // 生成随机的ID
  },
  "devDependencies": {
    "@pmmmwh/react-refresh-webpack-plugin": "^0.5.7",
    "@svgr/webpack": "^6.3.1",
    "@teamsupercell/typings-for-css-modules-loader": "^2.5.1",
    "@testing-library/jest-dom": "^5.16.5",
    "@testing-library/react": "^13.3.0",
    "@types/flat": "^5.0.2",
    "@types/jest": "^28.1.7",
    "@types/js-yaml": "^4.0.5",
    "@types/lodash": "^4.14.191",
    "@types/node": "18.7.6",
    "@types/node-schedule": "^2.1.0",
    "@types/react": "^18.0.17",
    "@types/react-dom": "^18.0.6",
    "@types/react-scroll": "^1.8.6",
    "@types/react-test-renderer": "^18.0.0",
    "@types/react-virtualized-auto-sizer": "^1.0.1",
    "@types/semver": "^7.5.0",
    "@types/terser-webpack-plugin": "^5.0.4",
    "@types/uuid": "^9.0.0",
    "@types/webpack-bundle-analyzer": "^4.4.2",
    "@typescript-eslint/eslint-plugin": "^5.33.1",
    "@typescript-eslint/parser": "^5.33.1",
    "browserslist-config-erb": "^0.0.3",
    "chalk": "^4.1.2",
    "concurrently": "^7.3.0",
    "core-js": "^3.24.1",
    "cross-env": "^7.0.3",
    "css-loader": "^6.7.1",
    "css-minimizer-webpack-plugin": "^4.0.0",
    "detect-port": "^1.3.0",
    "electron": "^20.0.2",
    "electron-builder": "^23.3.3",
    "electron-devtools-installer": "^3.2.0",
    "electron-notarize": "^1.2.1",
    "electron-rebuild": "^3.2.9",
    "electronmon": "^2.0.2",
    "eslint": "^8.22.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-erb": "^4.0.3",
    "eslint-import-resolver-typescript": "^3.4.1",
    "eslint-import-resolver-webpack": "^0.13.2",
    "eslint-plugin-compat": "^4.0.2",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-jest": "^26.8.3",
    "eslint-plugin-jsx-a11y": "^6.6.1",
    "eslint-plugin-promise": "^6.0.0",
    "eslint-plugin-react": "^7.30.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "file-loader": "^6.2.0",
    "html-webpack-plugin": "^5.5.0",
    "husky": "^8.0.1",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^28.1.3",
    "jest-environment-jsdom": "^28.1.3",
    "lint-staged": "^13.0.3",
    "mini-css-extract-plugin": "^2.6.1",
    "prettier": "^2.7.1",
    "react-refresh": "^0.14.0",
    "react-test-renderer": "^18.2.0",
    "rimraf": "^3.0.2",
    "sass": "^1.54.4",
    "sass-loader": "^13.0.2",
    "style-loader": "^3.3.1",
    "terser-webpack-plugin": "^5.3.5",
    "ts-jest": "^28.0.8",
    "ts-loader": "^9.3.1",
    "ts-node": "^10.9.1",
    "typed-emitter": "^2.1.0",
    "typescript": "^4.7.4",
    "url-loader": "^4.1.1",
    "web-worker": "^1.2.0",
    "webpack": "^5.74.0",
    "webpack-bundle-analyzer": "^4.5.0",
    "webpack-cli": "^4.10.0",
    "webpack-dev-server": "^4.10.0",
    "webpack-merge": "^5.8.0"
  },
  // Electron 打包配置
  // https://blog.csdn.net/qq_41980754/article/details/119902572
  "build": {
    "productName": "Ostara", // 项目名，也是生成的可执行文件的前缀名
    "appId": "dev.krud.boost", // 包名
    "asar": true, // 是否使用 asar 打包
    "asarUnpack": "**\\*.{node,dll}", // 
    "files": [
      "dist",
      "node_modules",
      "package.json"
    ],
    "afterSign": ".erb/scripts/notarize.js", 
    "mac": {
      "target": {
        "target": "default",
        "arch": [
          "arm64",
          "x64"
        ]
      },
      "type": "distribution",
      "hardenedRuntime": true,
      "entitlements": "assets/entitlements.mac.plist",
      "entitlementsInherit": "assets/entitlements.mac.plist",
      "gatekeeperAssess": false
    },
    "dmg": { // 设置 electron 如何构建 dmg 文件
      "contents": [ // 自定义图标位置
        {
          "x": 130, // 从窗口左侧到图标中心的与设备无关的像素偏移
          "y": 220 // 从窗口顶侧到图标中心的与设备无关的像素偏移
        },
        {
          "x": 410,
          "y": 220,
          "type": "link", // 类型，枚举值：link、file、dir
          "path": "/Applications" // DMG 中文件的路径
        }
      ]
    },
    "win": { // 设置 electron 如何构建 win 文件
      "target": [
        "nsis"
      ]
    },
    "linux": { // 设置 electron 如何构建 linux 文件
      "target": [
        "AppImage"
      ],
      "category": "Development"
    },
    "directories": {
      "app": "release/app",
      "buildResources": "assets",
      "output": "release/build" // Build 输出文件夹
    },
    "extraResources": [ // 拷贝dll等静态文件到指定位置
      "./assets/**",
      {
        "from": "../devops/jdks/${os}/${arch}",
        "filter": [
          "**/*"
        ]
      },
      {
        "from": "../daemon/build/libs/daemon.jar",
        "to": "daemon/daemon.jar"
      },
      {
        "from": "../demo/build/libs/demo.jar",
        "to": "demo/demo.jar"
      }
    ],
    "publish": {
      "provider": "github",
      "owner": "krud-dev",
      "repo": "ostara"
    }
  },
  "devEngines": {
    "node": ">=14.x",
    "npm": ">=7.x"
  },
  "electronmon": {
    "patterns": [
      "!**/**",
      "src/main/**"
    ],
    "logLevel": "quiet"
  }
}
