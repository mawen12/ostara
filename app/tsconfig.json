// TypeScript 配置文件
// 参考：https://www.typescriptlang.org/zh/tsconfig
{
  "compilerOptions": {
    "incremental": true, // TS编译器在第一次编译后生成一个存储编译信息的文件，第二次编译会在第一次的基础上进行增量编译，可以提高编译的速度
    "target": "es2021", // 指定编译的ECMAScript目标版本，枚举值：ES3（默认值）、ES5、ES6（等于 ES2015）、ES2015、ES2016、ES2017、ESNext
    "module": "commonjs", // 指定生成哪个模块系统代码，枚举值：None、CommonJS（默认值）、AMD、System、UMD、ES6（如果target设置ES6，默认module为ES6）、ES2015、ESNext
    "lib": ["dom", "es2021"], //编译过程中需要引入的库的文件的列表，当target为ES5时，默认值为['DOM','ES5','ScriptHost']
    "jsx": "react-jsx", // 指定jsx代码生成，枚举值：preserve、react-native、react、react-jsx
    "strict": true, // 启用所有严格类型检查选项
    "sourceMap": true, // 生成响应的.map文件
    "emitDecoratorMetadata": true, // 为装饰器提供元数据的支持
    "experimentalDecorators": true, // 启用装饰器
    "baseUrl": "./src", // 用于解析非相对模块名称的基目录
    "moduleResolution": "node", // 选择模块解析策略，枚举值：node（Node.js）、classic（TypeScript pre-1.6，默认值）
    "esModuleInterop": true, // 允许export导出，由import from 导入
    "allowSyntheticDefaultImports": true, // 允许从没有设置默认导出的模块中默认导入
    "resolveJsonModule": true, // 允许在TS中引入json
    "allowJs": true, // 允许编译javascript文件
    "outDir": ".erb/dll", // 指定输出目录
    "typeRoots": ["./node_modules/@types", "./src/types"], // 包含类型声明的文件列表
  },
  "exclude": ["test", "release/build", "release/app/dist", ".erb/dll"] // 指定排除编译文件目录
}
